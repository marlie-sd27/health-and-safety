this function creates events for a form scheduled in regular intervals for the next 5 years
and is triggered when a form is inserted into the database,
Events will not be scheduled in July or August unless specified by the column 'full_year' = true


finish DATE -- 5 years from the date the form is created. Events will stop being created then
next_occurence DATE -- the next occuring date of the event to be created. This changes every loop iteration
month INTEGER -- integer representation of the next_occurence's month
new -- instance of the new form being inserted


CREATE OR REPLACE FUNCTION insert_events()
    RETURNS TRIGGER AS $example_table$

    DECLARE
        schedule_dates DATE[];
        date DATE;
        finish DATE;
        next_occurence DATE;
        month INTEGER ;

    BEGIN

        SELECT string_to_array(new.first_occurence_at, ',') INTO schedule_dates;

        IF new.interval IS NOT NULL THEN

            FOREACH date IN ARRAY schedule_dates LOOP
                finish := date + INTERVAL '5 years';
                next_occurence := date::DATE;

                LOOP
                    EXIT WHEN next_occurence > finish;

                    IF new.full_year = 'f'::BOOLEAN THEN
                        SELECT EXTRACT(MONTH FROM next_occurence) INTO month;

                        IF month = 7 THEN
                            RAISE NOTICE 'Not scheduling for July';
                        ELSEIF month = 8 THEN
                            RAISE NOTICE 'Not scheduling for August';
                        ELSE
                            INSERT INTO events (forms_id, date, created_at, updated_at)
                            VALUES (new.id, next_occurence, now(), now());
                        END IF;

                        next_occurence := next_occurence + new.interval::INTERVAL;

                    ELSE
                        INSERT INTO events (forms_id, date) VALUES (new.id, next_occurence);
                        next_occurence := next_occurence + new.interval::INTERVAL;
                    END IF;

                END LOOP;

            END LOOP;

        ELSEIF new.first_occurence_at IS NOT NULL THEN
            INSERT INTO events (forms_id, date) VALUES (new.id, new.first_occurence_at);
        END IF;
    RETURN NULL;
    END;
$example_table$ LANGUAGE plpgsql;
